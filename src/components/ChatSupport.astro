---
// Chat Support Button Component
---

<div class="fixed bottom-6 right-6 z-50">
  <!-- Chat Button -->
  <button
    id="chat-button"
    class="relative bg-primary hover:bg-primary-dark text-white w-16 h-16 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center group animate-pulse-slow"
    aria-label="Open chat support"
  >
    <!-- Chat Icon -->
    <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 24 24">
      <path d="M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H6l-2 2V4h16v12z"/>
      <path d="M7 9h2v2H7zm4 0h2v2h-2zm4 0h2v2h-2z"/>
    </svg>
    
    <!-- Notification Badge -->
    <span class="absolute -top-1 -right-1 bg-red-500 text-white text-xs w-5 h-5 rounded-full flex items-center justify-center">
      1
    </span>
    
    <!-- Tooltip -->
    <span class="absolute bottom-full right-0 mb-2 px-3 py-1 bg-gray-800 text-white text-sm rounded-lg whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none">
      Chat with us!
    </span>
  </button>
  
  <!-- Mock Chat Popup (hidden by default) -->
  <div id="chat-popup" class="hidden absolute bottom-20 right-0 w-80 bg-white rounded-2xl shadow-2xl overflow-hidden">
    <div class="bg-primary text-white p-4">
      <div class="flex items-center justify-between">
        <h3 class="font-semibold">Nutricraft Support</h3>
        <button id="close-chat" class="text-white hover:text-gray-200">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <p class="text-sm opacity-90 mt-1">We typically reply within minutes</p>
    </div>
    
    <div class="p-6">
      <div class="text-center">
        <svg class="w-16 h-16 text-primary mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"></path>
        </svg>
        <h4 class="font-semibold text-gray-900 mb-2">Chat Support Coming Soon!</h4>
        <p class="text-gray-600 text-sm mb-4">
          Our live chat feature is currently being set up. In the meantime, please contact us through our form or call us directly.
        </p>
        <a href="#contact" class="btn-primary text-sm">
          Go to Contact Form
        </a>
      </div>
    </div>
  </div>
</div>

<style>
  @keyframes pulse-slow {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.8;
    }
  }
  
  .animate-pulse-slow {
    animation: pulse-slow 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  @media (max-width: 640px) {
    #chat-popup {
      width: calc(100vw - 3rem);
      right: -0.75rem;
    }
  }
</style>

<script>
  const chatButton = document.getElementById('chat-button');
  const chatPopup = document.getElementById('chat-popup');
  const closeChat = document.getElementById('close-chat');
  
  // Toggle chat popup
  chatButton?.addEventListener('click', () => {
    chatPopup?.classList.toggle('hidden');
    
    // Remove pulse animation when opened
    if (!chatPopup?.classList.contains('hidden')) {
      chatButton.classList.remove('animate-pulse-slow');
    }
  });
  
  // Close chat popup
  closeChat?.addEventListener('click', () => {
    chatPopup?.classList.add('hidden');
    
    // Restore pulse animation after a delay
    setTimeout(() => {
      chatButton?.classList.add('animate-pulse-slow');
    }, 3000);
  });
  
  // Close popup when clicking outside
  document.addEventListener('click', (e) => {
    if (!chatButton?.contains(e.target as Node) && !chatPopup?.contains(e.target as Node)) {
      chatPopup?.classList.add('hidden');
    }
  });
</script>