---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import ScrollAnimation from "../../components/ScrollAnimation.astro";
import { formulations, getFormulationBySlug, formulationComparison } from "../../data/formulations.js";

export async function getStaticPaths() {
  return formulations.map((formulation) => ({
    params: { format: formulation.slug },
  }));
}

const { format } = Astro.params;
const formulation = getFormulationBySlug(format);

if (!formulation) {
  return Astro.redirect('/404');
}

// SEO metadata
const title = `${formulation.name} Manufacturing - Nutricraft Labs`;
const description = formulation.shortDescription;
---

<BaseLayout title={title} description={description}>
  <Header />

  <!-- Hero Section -->
  <section class="bg-gradient-to-b from-mint-50 to-white py-16 md:py-24">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <ScrollAnimation animation="fade-up">
          <div class="relative w-full max-w-2xl mx-auto h-64 md:h-80 mb-8 overflow-hidden rounded-2xl bg-gradient-to-br from-mint-100 to-mint-200">
            <img
              src={formulation.image}
              alt={formulation.imageAlt}
              class="w-full h-full object-cover"
              loading="eager"
              width="800"
              height="400"
            />
          </div>
          <h1 class="text-4xl md:text-5xl font-bold text-dark-900 mb-4">
            {formulation.name} Manufacturing
          </h1>
          <p class="text-xl text-dark-600 max-w-3xl mx-auto mb-8">
            {formulation.shortDescription}
          </p>
          <a
            href="/contact"
            class="inline-flex items-center justify-center px-8 py-4 bg-mint-600 text-white font-semibold rounded-lg hover:bg-mint-700 transition-colors duration-300"
          >
            Get a Quote for {formulation.name}
            <svg
              class="ml-2 w-5 h-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M17 8l4 4m0 0l-4 4m4-4H3"
              ></path>
            </svg>
          </a>
        </ScrollAnimation>
      </div>
    </div>
  </section>

  <!-- Key Benefits Section -->
  <section class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <ScrollAnimation animation="fade-up">
        <h2 class="text-3xl font-bold text-dark-900 mb-12 text-center">
          Why Choose {formulation.name}?
        </h2>
      </ScrollAnimation>
      
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {formulation.benefits.map((benefit, index) => (
          <ScrollAnimation animation="fade-up" delay={index * 100}>
            <div class="flex items-start">
              <div class="flex-shrink-0">
                <div class="w-10 h-10 bg-mint-100 rounded-lg flex items-center justify-center">
                  <svg
                    class="w-6 h-6 text-mint-600"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                      clip-rule="evenodd"
                    ></path>
                  </svg>
                </div>
              </div>
              <p class="ml-4 text-dark-600">{benefit}</p>
            </div>
          </ScrollAnimation>
        ))}
      </div>
    </div>
  </section>

  <!-- Best For Section -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <ScrollAnimation animation="fade-up">
        <h2 class="text-3xl font-bold text-dark-900 mb-12 text-center">
          Best For These Supplements
        </h2>
      </ScrollAnimation>
      
      <div class="flex flex-wrap justify-center gap-4">
        {formulation.bestFor.map((item, index) => (
          <ScrollAnimation animation="fade-up" delay={index * 50}>
            <span class="px-6 py-3 bg-white rounded-full text-dark-700 shadow-md text-lg">
              {item}
            </span>
          </ScrollAnimation>
        ))}
      </div>
    </div>
  </section>

  <!-- Technical Specifications -->
  <section class="py-16 bg-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid lg:grid-cols-2 gap-12">
        <!-- Manufacturing Details -->
        <ScrollAnimation animation="fade-right">
          <div class="bg-gray-50 rounded-2xl p-8">
            <h3 class="text-2xl font-bold text-dark-900 mb-6">
              Manufacturing Details
            </h3>
            <dl class="space-y-4">
              <div>
                <dt class="font-semibold text-dark-700">Process:</dt>
                <dd class="text-dark-600">{formulation.manufacturingDetails.process}</dd>
              </div>
              <div>
                <dt class="font-semibold text-dark-700">Minimum Order Quantity:</dt>
                <dd class="text-dark-600">{formulation.manufacturingDetails.moq}</dd>
              </div>
              <div>
                <dt class="font-semibold text-dark-700">Lead Time:</dt>
                <dd class="text-dark-600">{formulation.manufacturingDetails.leadTime}</dd>
              </div>
              <div>
                <dt class="font-semibold text-dark-700">Typical Shelf Life:</dt>
                <dd class="text-dark-600">{formulation.manufacturingDetails.shelfLife}</dd>
              </div>
            </dl>
          </div>
        </ScrollAnimation>

        <!-- Technical Specs -->
        <ScrollAnimation animation="fade-left">
          <div class="bg-gray-50 rounded-2xl p-8">
            <h3 class="text-2xl font-bold text-dark-900 mb-6">
              Technical Specifications
            </h3>
            <dl class="space-y-4">
              <div>
                <dt class="font-semibold text-dark-700">Bioavailability:</dt>
                <dd class="text-dark-600">{formulation.technicalSpecs.bioavailability}</dd>
              </div>
              <div>
                <dt class="font-semibold text-dark-700">
                  {formulation.id === 'powders' || formulation.id === 'liquids' ? 'Absorption Time:' : 'Dissolution Time:'}
                </dt>
                <dd class="text-dark-600">
                  {formulation.technicalSpecs.dissolutionTime || formulation.technicalSpecs.absorptionTime}
                </dd>
              </div>
              <div>
                <dt class="font-semibold text-dark-700">
                  {formulation.id === 'liquids' || formulation.id === 'powders' ? 'Packaging Options:' : 'Available Sizes:'}
                </dt>
                <dd class="text-dark-600">
                  {formulation.technicalSpecs.sizes || formulation.technicalSpecs.packaging?.join(', ')}
                </dd>
              </div>
              {formulation.technicalSpecs.coatingOptions && (
                <div>
                  <dt class="font-semibold text-dark-700">Coating Options:</dt>
                  <dd class="text-dark-600">{formulation.technicalSpecs.coatingOptions.join(', ')}</dd>
                </div>
              )}
              {formulation.technicalSpecs.types && (
                <div>
                  <dt class="font-semibold text-dark-700">Types Available:</dt>
                  <dd class="text-dark-600">{formulation.technicalSpecs.types.join(', ')}</dd>
                </div>
              )}
              {formulation.technicalSpecs.shapes && (
                <div>
                  <dt class="font-semibold text-dark-700">Shape Options:</dt>
                  <dd class="text-dark-600">{formulation.technicalSpecs.shapes.join(', ')}</dd>
                </div>
              )}
              {formulation.technicalSpecs.bases && (
                <div>
                  <dt class="font-semibold text-dark-700">Base Options:</dt>
                  <dd class="text-dark-600">{formulation.technicalSpecs.bases.join(', ')}</dd>
                </div>
              )}
            </dl>
          </div>
        </ScrollAnimation>
      </div>
    </div>
  </section>

  <!-- Target Demographics -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <ScrollAnimation animation="fade-up">
        <h2 class="text-3xl font-bold text-dark-900 mb-12 text-center">
          Ideal For These Markets
        </h2>
      </ScrollAnimation>
      
      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
        {formulation.targetDemographics.map((demographic, index) => (
          <ScrollAnimation animation="fade-up" delay={index * 100}>
            <div class="bg-white p-6 rounded-lg shadow-md text-center">
              <div class="w-12 h-12 bg-mint-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <svg
                  class="w-6 h-6 text-mint-600"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path
                    fill-rule="evenodd"
                    d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                    clip-rule="evenodd"
                  ></path>
                </svg>
              </div>
              <p class="text-dark-700 font-medium">{demographic}</p>
            </div>
          </ScrollAnimation>
        ))}
      </div>
    </div>
  </section>

  <!-- Considerations Section -->
  {formulation.considerations && formulation.considerations.length > 0 && (
    <section class="py-16 bg-white">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <ScrollAnimation animation="fade-up">
          <h2 class="text-3xl font-bold text-dark-900 mb-12 text-center">
            Important Considerations
          </h2>
        </ScrollAnimation>
        
        <div class="max-w-3xl mx-auto">
          <div class="bg-amber-50 border border-amber-200 rounded-lg p-6">
            <ul class="space-y-3">
              {formulation.considerations.map((consideration, index) => (
                <li class="flex items-start">
                  <svg
                    class="w-5 h-5 text-amber-600 mt-0.5 flex-shrink-0"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
                      clip-rule="evenodd"
                    ></path>
                  </svg>
                  <span class="ml-3 text-dark-600">{consideration}</span>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </section>
  )}

  <!-- CTA Section -->
  <section class="py-20 bg-gradient-to-b from-mint-50 to-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <ScrollAnimation animation="fade-up">
        <h2 class="text-3xl md:text-4xl font-bold text-dark-900 mb-6">
          Ready to Manufacture {formulation.name}?
        </h2>
        <p class="text-xl text-dark-600 mb-8">
          Our expert team will guide you through formulation, production, and 
          regulatory compliance for your {formulation.name.toLowerCase()} products.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a
            href="/contact"
            class="inline-flex items-center justify-center px-8 py-4 bg-mint-600 text-white font-semibold rounded-lg hover:bg-mint-700 transition-colors duration-300"
          >
            Request a Quote
            <svg
              class="ml-2 w-5 h-5"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M17 8l4 4m0 0l-4 4m4-4H3"
              ></path>
            </svg>
          </a>
          <a
            href="/formulations"
            class="inline-flex items-center justify-center px-8 py-4 bg-white text-mint-600 font-semibold rounded-lg border-2 border-mint-600 hover:bg-mint-50 transition-colors duration-300"
          >
            View All Formats
          </a>
        </div>
      </ScrollAnimation>
    </div>
  </section>

  <Footer />
</BaseLayout>